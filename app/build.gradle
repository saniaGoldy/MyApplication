plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

def readKeystoreProperties() {
    def propsFile = rootProject.file('keystore.properties')
    def configName = 'release'
    if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        // sign.release.* like `sign.release.storeFile` etc. are defined in `keystore.properties` file
        android.signingConfigs[configName].storeFile = file(props['storeFile'])
        android.signingConfigs[configName].storePassword = props['storePassword']
        android.signingConfigs[configName].keyAlias = props['keyAlias']
        android.signingConfigs[configName].keyPassword = props['keyPassword']
        println "===== read keystore properties success ====="
    }
}

android {

    signingConfigs {
        release {
            /*storeFile file('C:\\Users\\Sasha\\Keys\\upload-keystore.jks')
            storePassword 'mama2809'
            keyPassword 'mama2809'
            keyAlias 'upload'*/
            readKeystoreProperties()
        }
    }
    compileSdk 32

    defaultConfig {
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resourceConfigurations += []
        buildConfigField "String", 'BASE_URL', '"http://dev.myserver.com"'
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    flavorDimensions 'prodFlavors'
    productFlavors {
        prod {
            dimension 'prodFlavors'
        }
        preprod {
            dimension 'prodFlavors'
            versionNameSuffix '-preprod'
            buildConfigField "String", 'BASE_URL', '"https://preprod.myserver.com/"'
        }
    }


    dependencies {

        implementation 'androidx.core:core-ktx:1.7.0'
        implementation 'androidx.appcompat:appcompat:1.3.0'
        implementation 'com.google.android.material:material:1.4.0'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        testImplementation 'junit:junit:4.13.2'
        androidTestImplementation 'androidx.test.ext:junit:1.1.3'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    }
}